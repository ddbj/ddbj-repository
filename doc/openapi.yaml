openapi: 3.1.0

info:
  title: DDBJ Repository API
  version: 1.0.0

servers:
  - url: https://repository.ddbj.nig.ac.jp/api
  - url: https://repository-staging.ddbj.nig.ac.jp/api
  - url: https://repository-dev.ddbj.nig.ac.jp/api

security:
  - BearerAuth: []

paths:
  /api-key:
    get:
      tags:
        - Authentication

      security: []

      responses:
        '200':
          description: Returns the login URL. Open this URL in your browser.

          content:
            application/json:
              schema:
                type: object
                required: [login_url]

                properties:
                  login_url:
                    type: string
                    format: uri

              example:
                login_url: https://repository.ddbj.nig.ac.jp/auth/login

  /api-key/regenerate:
    post:
      tags:
        - Authentication

      responses:
        '200':
          description: Returns a new API key.

          content:
            application/json:
              schema:
                type: object
                required: [api_key]

                properties:
                  api_key:
                    type: string

              example:
                api_key: ddbj_repository_VbHQePhpFhvrKI7by1kteMvN2ImLfhGVK4mTPFEZ2EO

        '401':
          $ref: '#/components/responses/Unauthorized'

  /me:
    get:
      tags:
        - Authentication

      responses:
        '200':
          description: Returns the user's login ID.

          content:
            application/json:
              schema:
                type: object
                required: [uid]

                properties:
                  uid:
                    type: string

              example:
                uid: alice

        '401':
          $ref: '#/components/responses/Unauthorized'

  /validations/bioproject/via-file:
    post:
      tags:
        - Run

      requestBody:
        $ref: '#/components/requestBodies/BioProjectViaFile'

      responses:
        '201':
          $ref: '#/components/responses/CreateResponseCreated'

        '400':
          $ref: '#/components/responses/CreateResponseBadRequest'

        '401':
          $ref: '#/components/responses/Unauthorized'

  /submissions/bioproject/via-file:
    post:
      tags:
        - Run

      requestBody:
        $ref: '#/components/requestBodies/BioProjectViaFile'

      responses:
        '201':
          $ref: '#/components/responses/CreateResponseCreated'

        '400':
          $ref: '#/components/responses/CreateResponseBadRequest'

        '401':
          $ref: '#/components/responses/Unauthorized'

  /validations/biosample/via-file:
    post:
      tags:
        - Run

      requestBody:
        $ref: '#/components/requestBodies/BioSampleViaFile'

      responses:
        '201':
          $ref: '#/components/responses/CreateResponseCreated'

        '400':
          $ref: '#/components/responses/CreateResponseBadRequest'

        '401':
          $ref: '#/components/responses/Unauthorized'

  /submissions/biosample/via-file:
    post:
      tags:
        - Run

      requestBody:
        $ref: '#/components/requestBodies/BioSampleViaFile'

      responses:
        '201':
          $ref: '#/components/responses/CreateResponseCreated'

        '400':
          $ref: '#/components/responses/CreateResponseBadRequest'

        '401':
          $ref: '#/components/responses/Unauthorized'

  /validations/trad/via-file:
    post:
      tags:
        - Run

      requestBody:
        $ref: '#/components/requestBodies/TradViaFile'

      responses:
        '201':
          $ref: '#/components/responses/CreateResponseCreated'

        '400':
          $ref: '#/components/responses/CreateResponseBadRequest'

        '401':
          $ref: '#/components/responses/Unauthorized'

  /submissions/trad/via-file:
    post:
      tags:
        - Run

      requestBody:
        $ref: '#/components/requestBodies/TradViaFile'

      responses:
        '201':
          $ref: '#/components/responses/CreateResponseCreated'

        '400':
          $ref: '#/components/responses/CreateResponseBadRequest'

        '401':
          $ref: '#/components/responses/Unauthorized'

  /validations/dra/via-file:
    post:
      tags:
        - Run

      requestBody:
        $ref: '#/components/requestBodies/DRAViaFile'

      responses:
        '201':
          $ref: '#/components/responses/CreateResponseCreated'

        '400':
          $ref: '#/components/responses/CreateResponseBadRequest'

        '401':
          $ref: '#/components/responses/Unauthorized'

  /submissions/dra/via-file:
    post:
      tags:
        - Run

      requestBody:
        $ref: '#/components/requestBodies/DRAViaFile'

      responses:
        '201':
          $ref: '#/components/responses/CreateResponseCreated'

        '400':
          $ref: '#/components/responses/CreateResponseBadRequest'

        '401':
          $ref: '#/components/responses/Unauthorized'

  /validations/gea/via-file:
    post:
      tags:
        - Run

      requestBody:
        $ref: '#/components/requestBodies/GEAViaFile'

      responses:
        '201':
          $ref: '#/components/responses/CreateResponseCreated'

        '400':
          $ref: '#/components/responses/CreateResponseBadRequest'

        '401':
          $ref: '#/components/responses/Unauthorized'

  /submissions/gea/via-file:
    post:
      tags:
        - Run

      requestBody:
        $ref: '#/components/requestBodies/GEAViaFile'

      responses:
        '201':
          $ref: '#/components/responses/CreateResponseCreated'

        '400':
          $ref: '#/components/responses/CreateResponseBadRequest'

        '401':
          $ref: '#/components/responses/Unauthorized'

  /validations/metabobank/via-file:
    post:
      tags:
        - Run

      requestBody:
        $ref: '#/components/requestBodies/MetaboBankViaFile'

      responses:
        '201':
          $ref: '#/components/responses/CreateResponseCreated'

        '400':
          $ref: '#/components/responses/CreateResponseBadRequest'

        '401':
          $ref: '#/components/responses/Unauthorized'

  /submissions/metabobank/via-file:
    post:
      tags:
        - Run

      requestBody:
        $ref: '#/components/requestBodies/MetaboBankViaFile'

      responses:
        '201':
          $ref: '#/components/responses/CreateResponseCreated'

        '400':
          $ref: '#/components/responses/CreateResponseBadRequest'

        '401':
          $ref: '#/components/responses/Unauthorized'

  /validations/jvar/via-file:
    post:
      tags:
        - Run

      requestBody:
        $ref: '#/components/requestBodies/JVarViaFile'

      responses:
        '201':
          $ref: '#/components/responses/CreateResponseCreated'

        '400':
          $ref: '#/components/responses/CreateResponseBadRequest'

        '401':
          $ref: '#/components/responses/Unauthorized'

  /submissions/jvar/via-file:
    post:
      tags:
        - Run

      requestBody:
        $ref: '#/components/requestBodies/JVarViaFile'

      responses:
        '201':
          $ref: '#/components/responses/CreateResponseCreated'

        '400':
          $ref: '#/components/responses/CreateResponseBadRequest'

        '401':
          $ref: '#/components/responses/Unauthorized'

  /requests/{id}:
    get:
      tags:
        - Request

      parameters:
        - name: id
          in: path
          required: true

          schema:
            type: integer

          example: 42

      responses:
        '200':
          description: Return the request resource.

          content:
            application/json:
              schema:
                type: object
                required: [status, validity, validation_reports, submission]

                properties:
                  status:
                    type: string

                    enum:
                      - waiting
                      - processing
                      - finished

                  validity:
                    type:
                      - string
                      - 'null'

                    enum:
                      - valid
                      - invalid
                      - error
                      - null

                  validation_reports:
                    type: object
                    required: [_base]

                    properties:
                      _base:
                        $ref: '#/components/schemas/ValidationReport'

                      BioProject:
                        $ref: '#/components/schemas/ValidationReport'

                      BioSample:
                        $ref: '#/components/schemas/ValidationReport'

                      Sequence:
                        $ref: '#/components/schemas/ValidationReport'

                      Annotation:
                        $ref: '#/components/schemas/ValidationReport'

                      Submission:
                        $ref: '#/components/schemas/ValidationReport'

                      Experiment:
                        $ref: '#/components/schemas/ValidationReport'

                      Run:
                        $ref: '#/components/schemas/ValidationReport'

                      RunFile:
                        $ref: '#/components/schemas/ValidationReport'

                      Analysis:
                        $ref: '#/components/schemas/ValidationReport'

                      AnalysisFile:
                        $ref: '#/components/schemas/ValidationReport'

                      IDF:
                        $ref: '#/components/schemas/ValidationReport'

                      SDRF:
                        $ref: '#/components/schemas/ValidationReport'

                      ADF:
                        $ref: '#/components/schemas/ValidationReport'

                      RawDataFile:
                        $ref: '#/components/schemas/ValidationReport'

                      ProcessedDataFile:
                        $ref: '#/components/schemas/ValidationReport'

                      MAF:
                        $ref: '#/components/schemas/ValidationReport'

                      Excel:
                        $ref: '#/components/schemas/ValidationReport'

                      VariantCallFile:
                        $ref: '#/components/schemas/ValidationReport'


                  submission:
                    type:
                      - object
                      - 'null'

                    required: [id, url]

                    properties:
                      id:
                        type: string

                      url:
                        type: string
                        format: uri

              example:
                status: finished
                validity: valid

                validation_reports:
                  - object_id: _base
                    path: null
                    validity: null
                    details: null

                  - object_id: BioSample
                    path: mybiosample.xml
                    validity: valid

                    details:
                      validity: true
                      answer: 42

                submission:
                  id: X-84
                  url: https://repository.ddbj.nig.ac.jp/api/submissions/X-84

        '401':
          $ref: '#/components/responses/Unauthorized'

  /submissions:
    get:
      tags:
        - Submission

      responses:
        '200':
          description: Return your submissions.

          content:
            application/json:
              schema:
                type: array

                items:
                  $ref: '#/components/schemas/Submission'

        '401':
          $ref: '#/components/responses/Unauthorized'

  /submissions/{id}:
    get:
      tags:
        - Submission

      responses:
        '200':
          description: Return the submission.

          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Submission'

        '401':
          $ref: '#/components/responses/Unauthorized'

  /submissions/{id}/files/{object_id}/{path}:
    get:
      tags:
        - Submission

      responses:
        '302':
          description: Redirect to the file.

        '401':
          $ref: '#/components/responses/Unauthorized'

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer

  schemas:
    Submission:
      type: object
      required: [id, url, created_at, db, objects]

      properties:
        id:
          type: string

        url:
          type: string
          format: uri

        created_at:
          type: string
          format: date-time

        db:
          type: string

          enum:
            - BioProject
            - BioSample
            - Trad
            - DRA
            - GEA
            - MetaboBank
            - JVar

        objects:
          type: array

          items:
            type: object
            required: [id, files]

            properties:
              id:
                type: string

                enum:
                  - BioProject
                  - BioSample
                  - Sequence
                  - Annotation
                  - Submission
                  - Experiment
                  - Run
                  - RunFile
                  - Analysis
                  - AnalysisFile
                  - IDF
                  - SDRF
                  - ADF
                  - RawDataFile
                  - ProcessedDataFile
                  - MAF
                  - Excel
                  - VariantCallFile

              files:
                type: array

                items:
                  type: object
                  required: [path, url]

                  properties:
                    path:
                      type: string

                    url:
                      type: string
                      format: uri

    ValidationReport:
      type: object
      required: [object_id, path, validity, details]

      properties:
        object_id:
          type: string

          enum:
            - _base
            - BioProject
            - BioSample
            - Sequence
            - Annotation
            - Submission
            - Experiment
            - Run
            - RunFile
            - Analysis
            - AnalysisFile
            - IDF
            - SDRF
            - ADF
            - RawDataFile
            - ProcessedDataFile
            - MAF
            - Excel
            - VariantCallFile

        path:
          type:
            - string
            - 'null'

        validity:
          type:
            - string
            - 'null'

          enum:
            - valid
            - invalid
            - error
            - null

        details:
          type:
            - object
            - 'null'

    BioProjectViaFileJSON:
      type: object

      required:
        - BioProject

      properties:
        BioProject:
          type: object
          required: [path]

          properties:
            path:
              $ref: '#/components/schemas/UserHomePath'

            destination:
              type: string

    BioProjectViaFileFormDataBioProject:
      allOf:
        - oneOf:
          - type: object

            required:
              - BioProject[file]

            properties:
              BioProject[file]:
                type: string
                format: binary

          - type: object
            required:
              - BioProject[path]

            properties:
              BioProject[path]:
                $ref: '#/components/schemas/UserHomePath'

        - type: object

          properties:
            BioProject[destination]:
              type: string

    BioSampleViaFileJSON:
      type: object

      required:
        - BioSample

      properties:
        BioSample:
          type: object
          required: [path]

          properties:
            path:
              $ref: '#/components/schemas/UserHomePath'

            destination:
              type: string

    BioSampleViaFileFormDataBioSample:
      allOf:
        - oneOf:
          - type: object

            required:
              - BioSample[file]

            properties:
              BioSample[file]:
                type: string
                format: binary

          - type: object
            required:
              - BioSample[path]

            properties:
              BioSample[path]:
                $ref: '#/components/schemas/UserHomePath'

        - type: object

          properties:
            BioSample[destination]:
              type: string

    TradViaFileJSON:
      type: object

      required:
        - Sequence
        - Annotation

      properties:
        Sequence:
          type: array
          minItems: 1

          items:
            type: object
            required: [path]

            properties:
              path:
                $ref: '#/components/schemas/UserHomePath'

              destination:
                type: string

        Annotation:
          type: array
          minItems: 1

          items:
            type: object
            required: [path]

            properties:
              path:
                $ref: '#/components/schemas/UserHomePath'

              destination:
                type: string

    TradViaFileFormDataSequence:
      allOf:
        - oneOf:
          - type: object

            required:
              - Sequence[][file]

            properties:
              Sequence[][file]:
                type: array
                minItems: 1

                items:
                  type: string
                  format: binary

          - type: object
            required:
              - Sequence[][path]

            properties:
              Sequence[][path]:
                type: array
                minItems: 1

                items:
                  $ref: '#/components/schemas/UserHomePath'

        - type: object

          properties:
            Sequence[][destination]:
              type: array
              minItems: 1

              items:
                type: string

    TradViaFileFormDataAnnotation:
      allOf:
        - oneOf:
          - type: object

            required:
              - Annotation[][file]

            properties:
              Annotation[][file]:
                type: array
                minItems: 1

                items:
                  type: string
                  format: binary

          - type: object
            required:
              - Annotation[][path]

            properties:
              Annotation[][path]:
                type: array
                minItems: 1

                items:
                  $ref: '#/components/schemas/UserHomePath'

        - type: object

          properties:
            Annotation[][destination]:
              type: array
              minItems: 1

              items:
                type: string

    DRAViaFileJSON:
      type: object

      required:
        - Submission
        - Experiment
        - Run
        - RunFile

      properties:
        Submission:
          type: object
          required: [path]

          properties:
            path:
              $ref: '#/components/schemas/UserHomePath'

            destination:
              type: string

        Experiment:
          type: object
          required: [path]

          properties:
            path:
              $ref: '#/components/schemas/UserHomePath'

            destination:
              type: string

        Run:
          type: object
          required: [path]

          properties:
            path:
              $ref: '#/components/schemas/UserHomePath'

            destination:
              type: string

        RunFile:
          type: array
          minItems: 1

          items:
            type: object
            required: [path]

            properties:
              path:
                $ref: '#/components/schemas/UserHomePath'

              destination:
                type: string

        Analysis:
          type: object
          required: [path]

          properties:
            path:
              $ref: '#/components/schemas/UserHomePath'

            destination:
              type: string

        AnalysisFile:
          type: array
          minItems: 0

          items:
            type: object
            required: [path]

            properties:
              path:
                $ref: '#/components/schemas/UserHomePath'

              destination:
                type: string

    DRAViaFileFormDataSubmission:
      allOf:
        - oneOf:
          - type: object

            required:
              - Submission[file]

            properties:
              Submission[file]:
                type: string
                format: binary

          - type: object
            required:
              - Submission[path]

            properties:
              Submission[path]:
                $ref: '#/components/schemas/UserHomePath'

        - type: object

          properties:
            Submission[destination]:
              type: string

    DRAViaFileFormDataExperiment:
      allOf:
        - oneOf:
          - type: object

            required:
              - Experiment[file]

            properties:
              Experiment[file]:
                type: string
                format: binary

          - type: object
            required:
              - Experiment[path]

            properties:
              Experiment[path]:
                $ref: '#/components/schemas/UserHomePath'

        - type: object

          properties:
            Experiment[destination]:
              type: string

    DRAViaFileFormDataRun:
      allOf:
        - oneOf:
          - type: object

            required:
              - Run[file]

            properties:
              Run[file]:
                type: string
                format: binary

          - type: object
            required:
              - Run[path]

            properties:
              Run[path]:
                $ref: '#/components/schemas/UserHomePath'

        - type: object

          properties:
            Run[destination]:
              type: string

    DRAViaFileFormDataRunFile:
      allOf:
        - oneOf:
          - type: object

            required:
              - RunFile[][file]

            properties:
              RunFile[][file]:
                type: array
                minItems: 1

                items:
                  type: string
                  format: binary

          - type: object
            required:
              - RunFile[][path]

            properties:
              RunFile[][path]:
                type: array
                minItems: 1

                items:
                  $ref: '#/components/schemas/UserHomePath'

        - type: object

          properties:
            RunFile[][destination]:
              type: array
              minItems: 1

              items:
                type: string

    DRAViaFileFormDataAnalysis:
      allOf:
        - oneOf:
          - type: object

            properties:
              Analysis[file]:
                type: string
                format: binary

          - type: object

            properties:
              Analysis[path]:
                $ref: '#/components/schemas/UserHomePath'

        - type: object

          properties:
            Analysis[destination]:
              type: string

    DRAViaFileFormDataAnalysisFile:
      allOf:
        - oneOf:
          - type: object

            properties:
              AnalysisFile[][file]:
                type: array
                minItems: 0

                items:
                  type: string
                  format: binary

          - type: object

            properties:
              AnalysisFile[][path]:
                type: array
                minItems: 0

                items:
                  $ref: '#/components/schemas/UserHomePath'

        - type: object

          properties:
            AnalysisFile[][destination]:
              type: array
              minItems: 0

              items:
                type: string

    GEAViaFileJSON:
      type: object

      required:
        - IDF
        - SDRF

      properties:
        IDF:
          type: object
          required: [path]

          properties:
            path:
              $ref: '#/components/schemas/UserHomePath'

            destination:
              type: string

        SDRF:
          type: object
          required: [path]

          properties:
            path:
              $ref: '#/components/schemas/UserHomePath'

            destination:
              type: string

        ADF:
          type: array
          minItems: 0

          items:
            type: object
            required: [path]

            properties:
              path:
                $ref: '#/components/schemas/UserHomePath'

              destination:
                type: string

        RawDataFile:
          type: array
          minItems: 0

          items:
            type: object
            required: [path]

            properties:
              path:
                $ref: '#/components/schemas/UserHomePath'

              destination:
                type: string

        ProcessedDataFile:
          type: array
          minItems: 0

          items:
            type: object
            required: [path]

            properties:
              path:
                $ref: '#/components/schemas/UserHomePath'

              destination:
                type: string

    GEAViaFileFormDataIDF:
      allOf:
        - oneOf:
          - type: object

            required:
              - IDF[file]

            properties:
              IDF[file]:
                type: string
                format: binary

          - type: object
            required:
              - IDF[path]

            properties:
              IDF[path]:
                $ref: '#/components/schemas/UserHomePath'

        - type: object

          properties:
            IDF[destination]:
              type: string

    GEAViaFileFormDataSDRF:
      allOf:
        - oneOf:
          - type: object

            required:
              - SDRF[file]

            properties:
              SDRF[file]:
                type: string
                format: binary

          - type: object
            required:
              - SDRF[path]

            properties:
              SDRF[path]:
                $ref: '#/components/schemas/UserHomePath'

        - type: object

          properties:
            SDRF[destination]:
              type: string

    GEAViaFileFormDataADF:
      allOf:
        - oneOf:
          - type: object

            properties:
              ADF[][file]:
                type: array
                minItems: 0

                items:
                  type: string
                  format: binary

          - type: object

            properties:
              ADF[][path]:
                type: array
                minItems: 0

                items:
                  $ref: '#/components/schemas/UserHomePath'

        - type: object

          properties:
            ADF[][destination]:
              type: array
              minItems: 0

              items:
                type: string

    GEAViaFileFormDataRawDataFile:
      allOf:
        - oneOf:
          - type: object

            properties:
              RawDataFile[][file]:
                type: array
                minItems: 0

                items:
                  type: string
                  format: binary

          - type: object

            properties:
              RawDataFile[][path]:
                type: array
                minItems: 0

                items:
                  $ref: '#/components/schemas/UserHomePath'

        - type: object

          properties:
            RawDataFile[][destination]:
              type: array
              minItems: 0

              items:
                type: string

    GEAViaFileFormDataProcessedDataFile:
      allOf:
        - oneOf:
          - type: object

            properties:
              ProcessedDataFile[][file]:
                type: array
                minItems: 0

                items:
                  type: string
                  format: binary

          - type: object

            properties:
              ProcessedDataFile[][path]:
                type: array
                minItems: 0

                items:
                  $ref: '#/components/schemas/UserHomePath'

        - type: object

          properties:
            ProcessedDataFile[][destination]:
              type: array
              minItems: 0

              items:
                type: string

    MetaboBankViaFileJSON:
      type: object

      required:
        - IDF
        - SDRF

      properties:
        IDF:
          type: object
          required: [path]

          properties:
            path:
              $ref: '#/components/schemas/UserHomePath'

            destination:
              type: string

        SDRF:
          type: object
          required: [path]

          properties:
            path:
              $ref: '#/components/schemas/UserHomePath'

            destination:
              type: string

        MAF:
          type: array
          minItems: 0

          items:
            type: object
            required: [path]

            properties:
              path:
                $ref: '#/components/schemas/UserHomePath'

              destination:
                type: string

        RawDataFile:
          type: array
          minItems: 0

          items:
            type: object
            required: [path]

            properties:
              path:
                $ref: '#/components/schemas/UserHomePath'

              destination:
                type: string

        ProcessedDataFile:
          type: array
          minItems: 0

          items:
            type: object
            required: [path]

            properties:
              path:
                $ref: '#/components/schemas/UserHomePath'

              destination:
                type: string

        BioSample:
          type: object
          required: [path]

          properties:
            path:
              $ref: '#/components/schemas/UserHomePath'

            destination:
              type: string

    MetaboBankViaFileFormDataIDF:
      allOf:
        - oneOf:
          - type: object

            required:
              - IDF[file]

            properties:
              IDF[file]:
                type: string
                format: binary

          - type: object
            required:
              - IDF[path]

            properties:
              IDF[path]:
                $ref: '#/components/schemas/UserHomePath'

        - type: object

          properties:
            IDF[destination]:
              type: string

    MetaboBankViaFileFormDataSDRF:
      allOf:
        - oneOf:
          - type: object

            required:
              - SDRF[file]

            properties:
              SDRF[file]:
                type: string
                format: binary

          - type: object
            required:
              - SDRF[path]

            properties:
              SDRF[path]:
                $ref: '#/components/schemas/UserHomePath'

        - type: object

          properties:
            SDRF[destination]:
              type: string

    MetaboBankViaFileFormDataMAF:
      allOf:
        - oneOf:
          - type: object

            properties:
              MAF[][file]:
                type: array
                minItems: 0

                items:
                  type: string
                  format: binary

          - type: object

            properties:
              MAF[][path]:
                type: array
                minItems: 0

                items:
                  $ref: '#/components/schemas/UserHomePath'

        - type: object

          properties:
            MAF[][destination]:
              type: array
              minItems: 0

              items:
                type: string

    MetaboBankViaFileFormDataRawDataFile:
      allOf:
        - oneOf:
          - type: object

            properties:
              RawDataFile[][file]:
                type: array
                minItems: 0

                items:
                  type: string
                  format: binary

          - type: object

            properties:
              RawDataFile[][path]:
                type: array
                minItems: 0

                items:
                  $ref: '#/components/schemas/UserHomePath'

        - type: object

          properties:
            RawDataFile[][destination]:
              type: array
              minItems: 0

              items:
                type: string

    MetaboBankViaFileFormDataProcessedDataFile:
      allOf:
        - oneOf:
          - type: object

            properties:
              ProcessedDataFile[][file]:
                type: array
                minItems: 0

                items:
                  type: string
                  format: binary

          - type: object

            properties:
              ProcessedDataFile[][path]:
                type: array
                minItems: 0

                items:
                  $ref: '#/components/schemas/UserHomePath'

        - type: object

          properties:
            ProcessedDataFile[][destination]:
              type: array
              minItems: 0

              items:
                type: string

    MetaboBankViaFileFormDataBioSample:
      allOf:
        - oneOf:
          - type: object

            properties:
              BioSample[file]:
                type: string
                format: binary

          - type: object

            properties:
              BioSample[path]:
                $ref: '#/components/schemas/UserHomePath'

        - type: object

          properties:
            BioSample[destination]:
              type: string

    JVarViaFileJSON:
      type: object

      required:
        - Excel

      properties:
        Excel:
          type: object
          required: [path]

          properties:
            path:
              $ref: '#/components/schemas/UserHomePath'

            destination:
              type: string

        VariantCallFile:
          type: array
          minItems: 0

          items:
            type: object
            required: [path]

            properties:
              path:
                $ref: '#/components/schemas/UserHomePath'

              destination:
                type: string

    JVarViaFileFormDataExcel:
      allOf:
        - oneOf:
          - type: object

            required:
              - Excel[file]

            properties:
              Excel[file]:
                type: string
                format: binary

          - type: object
            required:
              - Excel[path]

            properties:
              Excel[path]:
                $ref: '#/components/schemas/UserHomePath'

        - type: object

          properties:
            Excel[destination]:
              type: string

    JVarViaFileFormDataVariantCallFile:
      allOf:
        - oneOf:
          - type: object

            properties:
              VariantCallFile[][file]:
                type: array
                minItems: 0

                items:
                  type: string
                  format: binary

          - type: object

            properties:
              VariantCallFile[][path]:
                type: array
                minItems: 0

                items:
                  $ref: '#/components/schemas/UserHomePath'

        - type: object

          properties:
            VariantCallFile[][destination]:
              type: array
              minItems: 0

              items:
                type: string

    UserHomePath:
      type: string
      description: Relative path from the user's home directory.

  requestBodies:
    BioProjectViaFile:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BioProjectViaFileJSON'

          example:
            BioProject:
              path: mybioproject.xml
              destination: path/to/destination

        multipart/form-data:
          schema:
            allOf:
              - $ref: '#/components/schemas/BioProjectViaFileFormDataBioProject'

    BioSampleViaFile:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BioSampleViaFileJSON'

          example:
            BioSample:
              path: mybiosample.xml
              destination: path/to/destination

        multipart/form-data:
          schema:
            allOf:
              - $ref: '#/components/schemas/BioSampleViaFileFormDataBioSample'

    TradViaFile:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TradViaFileJSON'

          example:
            Sequence:
              path: mysequence.fasta
              destination: path/to/destination
            Annotation:
              path: myannotation.ann
              destination: path/to/destination

        multipart/form-data:
          schema:
            allOf:
              - $ref: '#/components/schemas/TradViaFileFormDataSequence'
              - $ref: '#/components/schemas/TradViaFileFormDataAnnotation'

    DRAViaFile:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DRAViaFileJSON'

          example:
            Submission:
              path: mysubmission.xml
              destination: path/to/destination
            Experiment:
              path: myexperiment.xml
              destination: path/to/destination
            Run:
              path: myrun.xml
              destination: path/to/destination
            RunFile:
              path: myrunfile.fastq
              destination: path/to/destination
            Analysis:
              path: myanalysis.xml
              destination: path/to/destination
            AnalysisFile:
              path: myanalysisfile.raw
              destination: path/to/destination

        multipart/form-data:
          schema:
            allOf:
              - $ref: '#/components/schemas/DRAViaFileFormDataSubmission'
              - $ref: '#/components/schemas/DRAViaFileFormDataExperiment'
              - $ref: '#/components/schemas/DRAViaFileFormDataRun'
              - $ref: '#/components/schemas/DRAViaFileFormDataRunFile'
              - $ref: '#/components/schemas/DRAViaFileFormDataAnalysis'
              - $ref: '#/components/schemas/DRAViaFileFormDataAnalysisFile'

    GEAViaFile:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GEAViaFileJSON'

          example:
            IDF:
              path: myidf.idf.txt
              destination: path/to/destination
            SDRF:
              path: mysdrf.sdrf.txt
              destination: path/to/destination
            ADF:
              path: myadf.adf.txt
              destination: path/to/destination
            RawDataFile:
              path: myrawdatafile.raw
              destination: path/to/destination
            ProcessedDataFile:
              path: myprocesseddatafile.raw
              destination: path/to/destination

        multipart/form-data:
          schema:
            allOf:
              - $ref: '#/components/schemas/GEAViaFileFormDataIDF'
              - $ref: '#/components/schemas/GEAViaFileFormDataSDRF'
              - $ref: '#/components/schemas/GEAViaFileFormDataADF'
              - $ref: '#/components/schemas/GEAViaFileFormDataRawDataFile'
              - $ref: '#/components/schemas/GEAViaFileFormDataProcessedDataFile'

    MetaboBankViaFile:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/MetaboBankViaFileJSON'

          example:
            IDF:
              path: myidf.idf.txt
              destination: path/to/destination
            SDRF:
              path: mysdrf.sdrf.txt
              destination: path/to/destination
            MAF:
              path: mymaf.maf.txt
              destination: path/to/destination
            RawDataFile:
              path: myrawdatafile.raw
              destination: path/to/destination
            ProcessedDataFile:
              path: myprocesseddatafile.raw
              destination: path/to/destination
            BioSample:
              path: mybiosample.tsv
              destination: path/to/destination

        multipart/form-data:
          schema:
            allOf:
              - $ref: '#/components/schemas/MetaboBankViaFileFormDataIDF'
              - $ref: '#/components/schemas/MetaboBankViaFileFormDataSDRF'
              - $ref: '#/components/schemas/MetaboBankViaFileFormDataMAF'
              - $ref: '#/components/schemas/MetaboBankViaFileFormDataRawDataFile'
              - $ref: '#/components/schemas/MetaboBankViaFileFormDataProcessedDataFile'
              - $ref: '#/components/schemas/MetaboBankViaFileFormDataBioSample'

    JVarViaFile:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/JVarViaFileJSON'

          example:
            Excel:
              path: myexcel.xlsx
              destination: path/to/destination
            VariantCallFile:
              path: myvariantcallfile.vcf
              destination: path/to/destination

        multipart/form-data:
          schema:
            allOf:
              - $ref: '#/components/schemas/JVarViaFileFormDataExcel'
              - $ref: '#/components/schemas/JVarViaFileFormDataVariantCallFile'

  responses:
    CreateResponseCreated:
      description: The requested process initiated successfully.

      content:
        application/json:
          schema:
            type: object
            required: [request]

            properties:
              request:
                type: object
                required: [id, url]

                properties:
                  id:
                    type: integer

                  url:
                    type: string
                    format: uri

          example:
            request:
              id: 42
              url: http://www.example.com/api/requests/42

    CreateResponseBadRequest:
      description: The requested process could not be initiated.

      content:
        application/json:
          schema:
            type: object
            required: [error]

            properties:
              error:
                type: string

          example:
            error: path must be in /home/alice

    Unauthorized:
      description: Not authenticated.

      content:
        application/json:
          schema:
            type: object
            required: [error]

            properties:
              error:
                type: string

          example:
            error: Unauthorized
