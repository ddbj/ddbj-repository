openapi: 3.1.0

info:
  title: ddbj-repository-api
  version: 1.0.0

servers:
  - url: https://repository.ddbj.nig.ac.jp/api
  - url: https://repository-staging.ddbj.nig.ac.jp/api
  - url: https://repository-dev.ddbj.nig.ac.jp/api

paths:
  /biosample/validate/via-file:
    post:
      tags:
        - Validate

      requestBody:
        $ref: '#/components/requestBodies/BioSampleViaFile'

      responses:
        '201':
          $ref: '#/components/responses/CreateResponseCreated'

        '400':
          $ref: '#/components/responses/CreateResponseBadRequest'

  /biosample/submit/via-file:
    post:
      tags:
        - Submit

      requestBody:
        $ref: '#/components/requestBodies/BioSampleViaFile'

      responses:
        '201':
          $ref: '#/components/responses/CreateResponseCreated'

        '400':
          $ref: '#/components/responses/CreateResponseBadRequest'

  /requests/{id}:
    get:
      tags:
        - Request

      parameters:
        - name: id
          in: path
          required: true

          schema:
            type: integer

          example: 42

      responses:
        '200':
          description: Return the request resource.

          content:
            application/json:
              schema:
                type: object

                properties:
                  status:
                    type: string

                    enum:
                      - waiting
                      - processing
                      - finished

                  validity:
                    type: string
                    nullable: true

                    enum:
                      - valid
                      - invalid
                      - error
                      - null

                  validation_reports:
                    type: object

                    properties:
                      BioSample:
                        $ref: '#/components/schemas/ValidationReport'
                      Submission:
                        $ref: '#/components/schemas/ValidationReport'

                    required:
                      - BioSample
                      - Submission

                  submission:
                    type: object
                    nullable: true

                    properties:
                      id:
                        type: string

                    required:
                      - id

                required:
                - status
                - validity
                - validation_reports
                - submission

              example:
                status: finished
                validity: valid

                validation_reports:
                  BioSample:
                    validity: valid

                    details:
                      validity: true
                      answer: 42

                  Submission:
                    validity:
                    details:

                submission:
                  id: X-84

components:
  schemas:
    ValidationReport:
      type: object

      properties:
        validity:
          type: string
          nullable: true

          enum:
            - valid
            - invalid
            - error
            - null

        details:
          type: object
          nullable: true

      required:
        - validity
        - details

    BioSampleViaFileSubmission:
      type: object

      properties:
        BioSample:
          oneOf:
            - type: string
              format: binary
            - type: string
              pattern: ^~/.
              description: Relative path from the user's home directory prefixed by `~/`.

        Submission:
          oneOf:
            - type: string
              format: binary
            - type: string
              pattern: ^~/.
              description: Relative path from the user's home directory prefixed by `~/`.

      required:
        - BioSample
        - Submission

  requestBodies:
    BioSampleViaFile:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BioSampleViaFileSubmission'

          example:
            BioSample: ~/mybiosample.xml
            Submission: ~/mysubmission.xml

        multipart/form-data:
          schema:
            $ref: '#/components/schemas/BioSampleViaFileSubmission'

          example:
            BioSample: ~/mybiosample.xml
            Submission: ~/mysubmission.xml

  responses:
    CreateResponseCreated:
      description: The requested process initiated successfully.

      content:
        application/json:
          schema:
            type: object

            properties:
              request:
                type: object

                properties:
                  id:
                    type: integer

                  url:
                    type: string
                    format: uri

                required:
                  - id
                  - url

            required:
              - request

          example:
            request:
              id: 42
              url: http://www.example.com/api/requests/42

    CreateResponseBadRequest:
      description: The requested process could not be initiated.

      content:
        application/json:
          schema:
            type: object

            properties:
              error:
                type: string

            required:
              - error

          example:
            error: path must be in /home/alice
