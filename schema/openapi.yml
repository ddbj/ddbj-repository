openapi: 3.1.0

info:
  title: DDBJ Repository API
  version: 1.0.0

servers:
  - url: https://repository.ddbj.nig.ac.jp/api
  - url: https://repository-staging.ddbj.nig.ac.jp/api
  - url: https://repository-dev.ddbj.nig.ac.jp/api

security:
  - BearerAuth: []

paths:
  /api-key:
    get:
      description: Get login URL.

      tags:
        - Authentication

      security: []

      responses:
        '200':
          description: Returns the login URL. Open this URL in your browser.

          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                required: [login_url]

                properties:
                  login_url:
                    type: string
                    format: uri

              example:
                login_url: https://repository.ddbj.nig.ac.jp/auth/login

  /api-key/regenerate:
    post:
      description: Re-generate API key.

      tags:
        - Authentication

      responses:
        '200':
          description: Returns a new API key.

          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                required: [api_key]

                properties:
                  api_key:
                    type: string

              example:
                api_key: ddbj_repository_VbHQePhpFhvrKI7by1kteMvN2ImLfhGVK4mTPFEZ2EO

        '401':
          $ref: '#/components/responses/Unauthorized'

  /me:
    get:
      description: Get your login ID.

      tags:
        - Authentication

      responses:
        '200':
          description: Returns the user's login ID.

          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                required: [uid, admin]

                properties:
                  uid:
                    type: string

                  admin:
                    type: boolean

              example:
                uid: alice
                admin: false

        '401':
          $ref: '#/components/responses/Unauthorized'

  /validations:
    get:
      description: Get your validations.

      tags:
        - Validation

      parameters:
        - in: query
          name: page

          description: |
            The page number to return. The default is 1.

          schema:
            type: integer
            default: 1

        - in: query
          name: everyone

          description: |
            If true, return all validations. If false, return only your validations.
            (Administrator only)

          schema:
            type: boolean
            default: false

        - in: query
          name: uid
          style: form
          explode: false

          description: |
            Return validations of the specified users.
            (Administrator only)

          schema:
            type: array

            items:
              type: string

        - in: query
          name: db
          style: form
          explode: false

          description: |
            Return validations of the specified databases.

          schema:
            type: array

            items:
              type: string

              enum:
                - BioProject
                - BioSample
                - Trad
                - DRA
                - GEA
                - MetaboBank
                - JVar
                - Trad2

        - in: query
          name: created_at_after

          schema:
            type: string
            format: date-time

        - in: query
          name: created_at_before

          schema:
            type: string
            format: date-time

        - in: query
          name: progress
          style: form
          explode: false

          schema:
            type: array

            items:
              type: string

              enum:
                - waiting
                - running
                - finished
                - canceled

        - in: query
          name: validity
          style: form
          explode: false

          schema:
            type: array

            items:
              type: string

              enum:
                - valid
                - invalid
                - error
                - 'null'

        - in: query
          name: submitted

          schema:
            type: boolean

      responses:
        '200':
          $ref: '#/components/responses/Validations'

        '400':
          $ref: '#/components/responses/BadRequest'

        '401':
          $ref: '#/components/responses/Unauthorized'

  /validations/via-file:
    post:
      description: Validate submission files.

      tags:
        - Validation

      requestBody:
        $ref: '#/components/requestBodies/ViaFile'

      responses:
        '201':
          description: The validation process initiated successfully.

          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Validation'

        '400':
          $ref: '#/components/responses/BadRequest'

        '401':
          $ref: '#/components/responses/Unauthorized'

        '422':
          $ref: '#/components/responses/UnprocessableEntity'

  /validations/{id}:
    get:
      description: Get the validation.

      tags:
        - Validation

      parameters:
        - name: id
          in: path
          required: true

          schema:
            type: integer

          example: 42

      responses:
        '200':
          description: Return the validation.

          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Validation'

              example:
                id: 42

                user:
                  uid: alice

                url: https://repository.ddbj.nig.ac.jp/api/validations/42
                progress: finished
                validity: valid

                results:
                  - object_id: _base
                    validity: null
                    details: null
                    file: null

                  - object_id: BioSample
                    path: mybiosample.xml
                    validity: valid

                    details:
                      validity: true
                      answer: 42

                    file:
                      path: mybiosample.xml
                      url: https://repository.ddbj.nig.ac.jp/api/validations/42/files/mybioproject.xml

                submission:
                  id: X-84
                  url: https://repository.ddbj.nig.ac.jp/api/submissions/X-84

        '401':
          $ref: '#/components/responses/Unauthorized'

        '404':
          $ref: '#/components/responses/NotFound'

    delete:
      description: Cancel the validation.

      tags:
        - Validation

      parameters:
        - name: id
          in: path
          required: true

          schema:
            type: integer

          example: 42

      responses:
        '200':
          description: Validation canceled successfully.

          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                required: [message]

                properties:
                  message:
                    type: string

        '400':
          $ref: '#/components/responses/BadRequest'

        '401':
          $ref: '#/components/responses/Unauthorized'

        '404':
          $ref: '#/components/responses/NotFound'

        '422':
          $ref: '#/components/responses/UnprocessableEntity'

  /validations/{id}/files/{path}:
    get:
      description: Get the submission file content.

      tags:
        - Validation

      parameters:
        - name: id
          in: path
          required: true

          schema:
            type: integer

        - name: path
          in: path
          required: true
          style: matrix
          explode: true

          schema:
            type: string

          example: dest/mybiosample.xml

      responses:
        '302':
          description: Redirect to the file.

        '401':
          $ref: '#/components/responses/Unauthorized'

        '404':
          $ref: '#/components/responses/NotFound'

  /submissions:
    get:
      description: Get your submissions.

      tags:
        - Submission

      parameters:
        - in: query
          name: page

          schema:
            type: integer

        - in: query
          name: db
          style: form
          explode: false

          description: |
            Return submissions of the specified databases.

          schema:
            type: array

            items:
              type: string

              enum:
                - BioProject
                - BioSample
                - Trad
                - DRA
                - GEA
                - MetaboBank
                - JVar
                - Trad2

        - in: query
          name: created_at_after

          schema:
            type: string
            format: date-time

        - in: query
          name: created_at_before

          schema:
            type: string
            format: date-time

      responses:
        '200':
          description: Return your submissions.

          headers:
            Link:
              schema:
                type: string

              description: The GitHub-style pagination URLs. See [Using pagination in the REST API - GitHub Docs](https://docs.github.com/en/rest/using-the-rest-api/using-pagination-in-the-rest-api?apiVersion=2022-11-28) for details.

          content:
            application/json:
              schema:
                type: array

                items:
                  $ref: '#/components/schemas/Submission'

        '400':
          $ref: '#/components/responses/BadRequest'

        '401':
          $ref: '#/components/responses/Unauthorized'

        '404':
          $ref: '#/components/responses/NotFound'

    post:
      description: Submit the validation.

      tags:
        - Submission

      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              required: [validation_id]

              properties:
                validation_id:
                  type: integer

      responses:
        '201':
          description: Submitted successfully.

          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Submission'

        '400':
          $ref: '#/components/responses/BadRequest'

        '401':
          $ref: '#/components/responses/Unauthorized'

        '422':
          $ref: '#/components/responses/UnprocessableEntity'

  /submissions/{id}:
    get:
      description: Get the submission.

      tags:
        - Submission

      parameters:
        - name: id
          in: path
          required: true

          schema:
            type: string

          example: X-42

      responses:
        '200':
          description: Return the submission.

          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Submission'

        '401':
          $ref: '#/components/responses/Unauthorized'

        '404':
          $ref: '#/components/responses/NotFound'

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer

  schemas:
    Validation:
      type: object
      additionalProperties: false
      required: [id, url, user, db, created_at, started_at, finished_at, progress, validity, objects, results, submission]

      properties:
        id:
          type: integer

        url:
          type: string
          format: uri

        user:
          type: object
          additionalProperties: false
          required: [uid]

          properties:
            uid:
              type: string

        db:
          type: string

          enum:
            - BioProject
            - BioSample
            - Trad
            - DRA
            - GEA
            - MetaboBank
            - JVar
            - Trad2

        created_at:
          type: string
          format: date-time

        started_at:
          type:
            - string
            - 'null'

          format: date-time

        finished_at:
          type:
            - string
            - 'null'

          format: date-time

        progress:
          type: string

          enum:
            - waiting
            - running
            - finished
            - canceled

        validity:
          type:
            - string
            - 'null'

          enum:
            - valid
            - invalid
            - error
            - null

        objects:
          $ref: '#/components/schemas/Objects'

        results:
          type: array

          items:
            $ref: '#/components/schemas/ValidationResult'

        submission:
          type:
            - object
            - 'null'

          required: [id, url]

          properties:
            id:
              type: string

            url:
              type: string
              format: uri

    Submission:
      type: object
      additionalProperties: false
      required: [id, created_at, validation]

      properties:
        id:
          type: string

        created_at:
          type: string
          format: date-time

        validation:
          $ref: '#/components/schemas/Validation'

    Objects:
      type: array

      items:
        type: object
        additionalProperties: false
        required: [id, files]

        properties:
          id:
            type: string

            enum:
              - BioProject
              - BioSample
              - Sequence
              - Annotation
              - Submission
              - Experiment
              - Run
              - RunFile
              - Analysis
              - AnalysisFile
              - IDF
              - SDRF
              - ADF
              - RawDataFile
              - ProcessedDataFile
              - MAF
              - Excel
              - VariantCallFile
              - Metadata

          files:
            type: array

            items:
              type: object
              additionalProperties: false
              required: [path, url]

              properties:
                path:
                  type: string

                url:
                  type: string
                  format: uri

    ValidationResult:
      type: object
      additionalProperties: false
      required: [object_id, validity, details, file]

      properties:
        object_id:
          type: string

          enum:
            - _base
            - BioProject
            - BioSample
            - Sequence
            - Annotation
            - Submission
            - Experiment
            - Run
            - RunFile
            - Analysis
            - AnalysisFile
            - IDF
            - SDRF
            - ADF
            - RawDataFile
            - ProcessedDataFile
            - MAF
            - Excel
            - VariantCallFile
            - Metadata

        validity:
          type:
            - string
            - 'null'

          enum:
            - valid
            - invalid
            - error
            - null

        details:
          type:
            - array
            - 'null'

          items:
            type: object
            additionalProperties: false
            required: [code, severity, message]

            properties:
              code:
                type: string

              severity:
                type: string

              message:
                type: string

        file:
          type:
            - object
            - 'null'

          additionalProperties: false
          required: [path, url]

          properties:
            path:
              type: string

            url:
              type: string
              format: uri

    File:
      type: string
      format: binary

    Path:
      type: string
      description: |
        Path of the file on the NIG supercomputer, relative to the home directory of the authorised user.

        Note: If both file and path are specified, the file takes precedence.

    Destination:
      type: string
      description: Destination of the file to be submitted.

    Error:
      type: object
      additionalProperties: false
      required: [error]

      properties:
        error:
          type: string

    BioProjectViaFile:
      type: object
      additionalProperties: false

      required:
        - db
        - BioProject

      properties:
        db:
          type: string
          enum: [BioProject]

        BioProject:
          type: object
          additionalProperties: false

          oneOf:
            - required: [file]
            - required: [path]

          properties:
            file:
              $ref: '#/components/schemas/File'

            path:
              $ref: '#/components/schemas/Path'

            destination:
              $ref: '#/components/schemas/Destination'

    BioSampleViaFile:
      type: object
      additionalProperties: false

      required:
        - db
        - BioSample

      properties:
        db:
          type: string
          enum: [BioSample]

        BioSample:
          type: object
          additionalProperties: false

          oneOf:
            - required: [file]
            - required: [path]

          properties:
            file:
              $ref: '#/components/schemas/File'

            path:
              $ref: '#/components/schemas/Path'

            destination:
              $ref: '#/components/schemas/Destination'

    TradViaFile:
      type: object
      additionalProperties: false

      required:
        - db
        - Sequence
        - Annotation

      properties:
        db:
          type: string
          enum: [Trad]

        Sequence:
          type: array
          minItems: 1

          items:
            type: object
            additionalProperties: false

            oneOf:
              - required: [file]
              - required: [path]

            properties:
              file:
                $ref: '#/components/schemas/File'

              path:
                $ref: '#/components/schemas/Path'

              destination:
                $ref: '#/components/schemas/Destination'

        Annotation:
          type: array
          minItems: 1

          items:
            type: object
            additionalProperties: false

            oneOf:
              - required: [file]
              - required: [path]

            properties:
              file:
                $ref: '#/components/schemas/File'

              path:
                $ref: '#/components/schemas/Path'

              destination:
                $ref: '#/components/schemas/Destination'

    DRAViaFile:
      type: object
      additionalProperties: false

      required:
        - db
        - Submission
        - Experiment
        - Run
        - RunFile

      properties:
        db:
          type: string
          enum: [DRA]

        Submission:
          type: object
          additionalProperties: false

          oneOf:
            - required: [file]
            - required: [path]

          properties:
            file:
              $ref: '#/components/schemas/File'

            path:
              $ref: '#/components/schemas/Path'

            destination:
              $ref: '#/components/schemas/Destination'

        Experiment:
          type: object
          additionalProperties: false

          oneOf:
            - required: [file]
            - required: [path]

          properties:
            file:
              $ref: '#/components/schemas/File'

            path:
              $ref: '#/components/schemas/Path'

            destination:
              $ref: '#/components/schemas/Destination'

        Run:
          type: object
          additionalProperties: false

          oneOf:
            - required: [file]
            - required: [path]

          properties:
            file:
              $ref: '#/components/schemas/File'

            path:
              $ref: '#/components/schemas/Path'

            destination:
              $ref: '#/components/schemas/Destination'

        RunFile:
          type: array
          minItems: 1

          items:
            type: object
            additionalProperties: false

            oneOf:
              - required: [file]
              - required: [path]

            properties:
              file:
                $ref: '#/components/schemas/File'

              path:
                $ref: '#/components/schemas/Path'

              destination:
                $ref: '#/components/schemas/Destination'

        Analysis:
          type: object
          additionalProperties: false

          oneOf:
            - required: [file]
            - required: [path]

          properties:
            file:
              $ref: '#/components/schemas/File'

            path:
              $ref: '#/components/schemas/Path'

            destination:
              $ref: '#/components/schemas/Destination'

        AnalysisFile:
          type: array
          minItems: 0

          items:
            type: object
            additionalProperties: false

            oneOf:
              - required: [file]
              - required: [path]

            properties:
              file:
                $ref: '#/components/schemas/File'

              path:
                $ref: '#/components/schemas/Path'

              destination:
                $ref: '#/components/schemas/Destination'

    GEAViaFile:
      type: object
      additionalProperties: false

      required:
        - db
        - IDF
        - SDRF

      properties:
        db:
          type: string
          enum: [GEA]

        IDF:
          type: object
          additionalProperties: false

          oneOf:
            - required: [file]
            - required: [path]

          properties:
            file:
              $ref: '#/components/schemas/File'

            path:
              $ref: '#/components/schemas/Path'

            destination:
              $ref: '#/components/schemas/Destination'

        SDRF:
          type: object
          additionalProperties: false

          oneOf:
            - required: [file]
            - required: [path]

          properties:
            file:
              $ref: '#/components/schemas/File'

            path:
              $ref: '#/components/schemas/Path'

            destination:
              $ref: '#/components/schemas/Destination'

        ADF:
          type: array
          minItems: 0

          items:
            type: object
            additionalProperties: false

            oneOf:
              - required: [file]
              - required: [path]

            properties:
              file:
                $ref: '#/components/schemas/File'

              path:
                $ref: '#/components/schemas/Path'

              destination:
                $ref: '#/components/schemas/Destination'

        RawDataFile:
          type: array
          minItems: 0

          items:
            type: object
            additionalProperties: false

            oneOf:
              - required: [file]
              - required: [path]

            properties:
              file:
                $ref: '#/components/schemas/File'

              path:
                $ref: '#/components/schemas/Path'

              destination:
                $ref: '#/components/schemas/Destination'

        ProcessedDataFile:
          type: array
          minItems: 0

          items:
            type: object
            additionalProperties: false

            oneOf:
              - required: [file]
              - required: [path]

            properties:
              file:
                $ref: '#/components/schemas/File'

              path:
                $ref: '#/components/schemas/Path'

              destination:
                $ref: '#/components/schemas/Destination'

    MetaboBankViaFile:
      type: object
      additionalProperties: false

      required:
        - db
        - IDF
        - SDRF

      properties:
        db:
          type: string
          enum: [MetaboBank]

        IDF:
          type: object
          additionalProperties: false

          oneOf:
            - required: [file]
            - required: [path]

          properties:
            file:
              $ref: '#/components/schemas/File'

            path:
              $ref: '#/components/schemas/Path'

            destination:
              $ref: '#/components/schemas/Destination'

        SDRF:
          type: object
          additionalProperties: false

          oneOf:
            - required: [file]
            - required: [path]

          properties:
            file:
              $ref: '#/components/schemas/File'

            path:
              $ref: '#/components/schemas/Path'

            destination:
              $ref: '#/components/schemas/Destination'

        MAF:
          type: array
          minItems: 0

          items:
            type: object
            additionalProperties: false

            oneOf:
              - required: [file]
              - required: [path]

            properties:
              file:
                $ref: '#/components/schemas/File'

              path:
                $ref: '#/components/schemas/Path'

              destination:
                $ref: '#/components/schemas/Destination'

        RawDataFile:
          type: array
          minItems: 0

          items:
            type: object
            additionalProperties: false

            oneOf:
              - required: [file]
              - required: [path]

            properties:
              file:
                $ref: '#/components/schemas/File'

              path:
                $ref: '#/components/schemas/Path'

              destination:
                $ref: '#/components/schemas/Destination'

        ProcessedDataFile:
          type: array
          minItems: 0

          items:
            type: object
            additionalProperties: false

            oneOf:
              - required: [file]
              - required: [path]

            properties:
              file:
                $ref: '#/components/schemas/File'

              path:
                $ref: '#/components/schemas/Path'

              destination:
                $ref: '#/components/schemas/Destination'

        BioSample:
          type: object
          additionalProperties: false

          oneOf:
            - required: [file]
            - required: [path]

          properties:
            file:
              $ref: '#/components/schemas/File'

            path:
              $ref: '#/components/schemas/Path'

            destination:
              $ref: '#/components/schemas/Destination'

    JVarViaFile:
      type: object
      additionalProperties: false

      required:
        - db
        - Excel

      properties:
        db:
          type: string
          enum: [JVar]

        Excel:
          type: object
          additionalProperties: false

          oneOf:
            - required: [file]
            - required: [path]

          properties:
            file:
              $ref: '#/components/schemas/File'

            path:
              $ref: '#/components/schemas/Path'

            destination:
              $ref: '#/components/schemas/Destination'

        VariantCallFile:
          type: array
          minItems: 0

          items:
            type: object
            additionalProperties: false

            oneOf:
              - required: [file]
              - required: [path]

            properties:
              file:
                $ref: '#/components/schemas/File'

              path:
                $ref: '#/components/schemas/Path'

              destination:
                $ref: '#/components/schemas/Destination'

    Trad2ViaFile:
      type: object
      additionalProperties: false

      required:
        - db
        - Sequence
        - Annotation
        - Metadata

      properties:
        db:
          type: string
          enum: [Trad2]

        Sequence:
          type: array
          minItems: 1

          items:
            type: object
            additionalProperties: false

            oneOf:
              - required: [file]
              - required: [path]

            properties:
              file:
                $ref: '#/components/schemas/File'

              path:
                $ref: '#/components/schemas/Path'

              destination:
                $ref: '#/components/schemas/Destination'

        Annotation:
          type: array
          minItems: 1

          items:
            type: object
            additionalProperties: false

            oneOf:
              - required: [file]
              - required: [path]

            properties:
              file:
                $ref: '#/components/schemas/File'

              path:
                $ref: '#/components/schemas/Path'

              destination:
                $ref: '#/components/schemas/Destination'

        Metadata:
          type: array
          minItems: 1

          items:
            type: object
            additionalProperties: false

            oneOf:
              - required: [file]
              - required: [path]

            properties:
              file:
                $ref: '#/components/schemas/File'

              path:
                $ref: '#/components/schemas/Path'

              destination:
                $ref: '#/components/schemas/Destination'

  requestBodies:
    ViaFile:
      content:
        multipart/form-data:
          schema:
            oneOf:
              - $ref: '#/components/schemas/BioProjectViaFile'
              - $ref: '#/components/schemas/BioSampleViaFile'
              - $ref: '#/components/schemas/TradViaFile'
              - $ref: '#/components/schemas/DRAViaFile'
              - $ref: '#/components/schemas/GEAViaFile'
              - $ref: '#/components/schemas/MetaboBankViaFile'
              - $ref: '#/components/schemas/JVarViaFile'
              - $ref: '#/components/schemas/Trad2ViaFile'

            discriminator:
              propertyName: db

              mapping:
                BioProject: '#/components/schemas/BioProjectViaFile'
                BioSample: '#/components/schemas/BioSampleViaFile'
                Trad: '#/components/schemas/TradViaFile'
                DRA: '#/components/schemas/DRAViaFile'
                GEA: '#/components/schemas/GEAViaFile'
                MetaboBank: '#/components/schemas/MetaboBankViaFile'
                JVar: '#/components/schemas/JVarViaFile'
                Trad2: '#/components/schemas/Trad2ViaFile'

  responses:
    Validations:
      description: Return your validations.

      headers:
        Link:
          schema:
            type: string

          description: GitHub-style pagination URLs. See [Using pagination in the REST API - GitHub Docs](https://docs.github.com/en/rest/using-the-rest-api/using-pagination-in-the-rest-api?apiVersion=2022-11-28) for details.

      content:
        application/json:
          schema:
            type: array

            items:
              $ref: '#/components/schemas/Validation'

          example:
            - id: 100
              url: https://repository.ddbj.nig.ac.jp/api/validations/100

              user:
                uid: alice

              db: BioProject
              created_at: '2024-01-01T00:00:00.000Z'
              started_at: '2024-01-01T00:01:00.000Z'
              finished_at: '2024-01-01T00:02:00.000Z'
              progress: finished
              validity: valid

              objects:
                - id: BioProject
                  files:
                    - path: mybioproject.xml
                      url: https://repository.ddbj.nig.ac.jp/api/validations/100/files/mybioproject.xml

              results:
                - object_id: _base
                  validity: valid
                  details: null
                  file: null

                - object_id: BioSample
                  validity: valid

                  details:
                    validity: true
                    answer: 42

                  file:
                    path: mybiosample.xml
                    url: https://repository.ddbj.nig.ac.jp/api/validations/100/files/mybioproject.xml

              submission:
                id: X-200
                url: https://repository.ddbj.nig.ac.jp/api/submissions/X-200

            - id: 101
              url: https://repository.ddbj.nig.ac.jp/api/validations/101
              db: BioSample
              created_at: '2024-01-01T01:00:00.000Z'
              started_at: '2024-01-01T01:01:00.000Z'
              finished_at: '2024-01-01T01:02:00.000Z'
              progress: waiting
              validity: null

              objects:
                - id: BioSample
                  files:
                    - path: mybiosample.xml
                      url: https://repository.ddbj.nig.ac.jp/api/validations/101/files/mybiosample.xml

              results:
                - object_id: _base
                  validity: null
                  details: null
                  file: null

              submission: null

    BadRequest:
      description: Unexpected parameter specified.

      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

          example:
            error: expected :page in 1..3; got 4

    Unauthorized:
      description: Not authenticated.

      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

          example:
            error: Unauthorized

    Forbidden:
      description: Does not have access rights to the resource.

      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

          example:
            error: Forbidden

    NotFound:
      description: The requested resource could not be found.

      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

          example:
            error: Not Found

    UnprocessableEntity:
      description: Invalid parameter or payload was specified.

      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

          example:
            error: 'Validation failed: Path is duplicated: mybiosample.xml'
